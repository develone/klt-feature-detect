/**********************************************************************
Finds the 100 best features in an image, and tracks these
features to the next image.  Saves the feature
locations (before and after tracking) to text files and to PPM files, 
and prints the features to the screen.
**********************************************************************/
#include <stdio.h>
#include "pnmio.h"
#include "klt.h"

#ifdef WIN32
int RunExample1()
#else
int main()
#endif
{
const unsigned char CRC7_POLY = 0x91;
unsigned char CRCTable[256];
 
unsigned char getCRCForByte(unsigned char val)
{
  unsigned char j;
 
  for (j = 0; j < 8; j++)
  {
    if (val & 1)
      val ^= CRC7_POLY;
    val >>= 1;
  }
 
  return val;
}
 
void buildCRCTable()
{
  int i;
 
  // fill an array with CRC values of all 256 possible bytes
  for (i = 0; i < 256; i++)
  {
    CRCTable[i] = getCRCForByte(i);
  }
}
 
unsigned char getCRC(unsigned char message[], unsigned char length)
{
  unsigned char i, crc = 0;
 
  for (i = 0; i < length; i++)
    crc = CRCTable[crc ^ message[i]];
  return crc;
}

#define imgsize 4096 

  unsigned char *img1, *img2;
  KLT_TrackingContext tc;
  KLT_FeatureList fl;
  int nFeatures = 100;
  int ncols, nrows;
  int i,j,index=0;

  tc = KLTCreateTrackingContext();
  KLTPrintTrackingContext(tc);
  fl = KLTCreateFeatureList(nFeatures);

  img1 = pgmReadFile("img0.pgm", NULL, &ncols, &nrows);
   
  img2 = pgmReadFile("img1.pgm", NULL, &ncols, &nrows);
  printf("img1 %d %d \n",ncols,nrows);
  KLTSelectGoodFeatures(tc, img1, ncols, nrows, fl);

  printf("\nIn first image:\n");
  for (i = 0 ; i < fl->nFeatures ; i++)  {
    printf("Feature #%d:  (%f,%f) with value of %d\n",
           i, fl->feature[i]->x, fl->feature[i]->y,
           fl->feature[i]->val);
  }

  KLTWriteFeatureListToPPM(fl, img1, ncols, nrows, "feat1.ppm");
  KLTWriteFeatureList(fl, "feat1.txt", "%3d");

  KLTTrackFeatures(tc, img1, img2, ncols, nrows, fl);

  printf("\nIn second image:\n");
  for (i = 0 ; i < fl->nFeatures ; i++)  {
    printf("Feature #%d:  (%f,%f) with value of %d\n",
           i, fl->feature[i]->x, fl->feature[i]->y,
           fl->feature[i]->val);
  }

  KLTWriteFeatureListToPPM(fl, img2, ncols, nrows, "feat2.ppm");
  KLTWriteFeatureList(fl, "feat2.fl", NULL);      /* binary file */
  KLTWriteFeatureList(fl, "feat2.txt", "%5.1f");  /* text file   */
  unsigned char message[65];
  char *ptr;
  short int inpbuf[imgsize];
  unsigned char CRC;
  //int j,k, index=0;
  int k;
  unsigned char barray[imgsize];
  FILE *outptr;
  outptr = fopen("bb.bin","wb");
  
  
   
  buildCRCTable();
  
  for(j=0;j<65;j++) {
    for(i=0;i<65;i++) {
      message[i] = img1[index];
      printf("%d,",message[i]);
      index++;
      
    }
    printf("%d \n");
  //printf("%d \n",strlen(message));
  CRC = getCRC(message, 64);
    message[64] = CRC;
    for(k=0;k<65;k++) printf("%x",message[k]);
    
    printf("\n0x%x\n",CRC);
    fwrite(message,sizeof(message),1,outptr); 
 
  }
  printf("\n");
fclose(outptr);
  return 0;
}


